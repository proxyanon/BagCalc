{"version":3,"sources":["serviceWorker.js","components/BagCalc.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","BagCalc","Object","classCallCheck","this","calcula_lote","lote","variacao","corretagem","parseFloat","calcula_spread","compra","venda","calcula_spread_lote","calcula_percentual_spread","arguments","length","undefined","calcula_sugestao","toFixed","App","_Component","_this","possibleConstructorReturn","getPrototypeOf","call","state","resultado","d_compra","d_venda","d_lote","d_variacao","d_resultado","funcao","inherits","createClass","key","value","localStorage","getItem","isNaN","setState","e","target","setItem","toString","_this2","react_default","a","createElement","mdbreact","fluid","className","size","id","onChange","handleChangeFuncao","bind","type","min","handleChangeCorretagem","placeholder","concat","color","onClick","handleClickCalcular","Component","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.096fd466.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export class BagCalc {\r\n\t\r\n\tstatic calcula_lote = (lote, variacao, corretagem) => {\r\n\t\treturn (parseFloat(lote) * parseFloat(variacao)) - parseFloat(corretagem);\r\n\t}\r\n\t\r\n\tstatic calcula_spread = (compra, venda, corretagem) => {\r\n\t\treturn (parseFloat(venda) - parseFloat(compra)) - parseFloat(corretagem);\r\n\t}\r\n\t\r\n\tstatic calcula_spread_lote = (compra, venda, lote, corretagem) => {\r\n\t\treturn ((parseFloat(venda) * parseFloat(lote)) - (parseFloat(compra) * parseFloat(lote))) - parseFloat(corretagem);\r\n\t}\r\n\t\r\n\tstatic calcula_percentual_spread = (compra, venda, corretagem, lote=1) => {\r\n\t\t//return [, ((parseFloat(venda) * parseFloat(lote)) - (parseFloat(compra) * parseFloat(lote))) - parseFloat(corretagem)];\r\n\t\treturn ((((parseFloat(venda) * parseFloat(lote)) - (parseFloat(compra) * parseFloat(lote))) - parseFloat(corretagem)) / (parseFloat(compra) * parseFloat(lote))) * 100;\r\n\t}\r\n\t\r\n\tstatic calcula_sugestao = (compra, lote, corretagem) => {\r\n\t\treturn ((((parseFloat(corretagem) / parseFloat(lote)) * 0.1) + (parseFloat(corretagem) / parseFloat(lote))) + parseFloat(compra)).toFixed(2);\r\n\t}\r\n\t\r\n}","import React, { Component } from 'react';\nimport { BagCalc } from './components/BagCalc';\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText, Button } from 'mdbreact';\n\nexport class App extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            'compra': undefined,\n            'venda': undefined,\n            'lote': 1,\n            'variacao': undefined,\n            'corretagem': 0,\n            'resultado': undefined,\n            'd_compra': 'd-none',\n            'd_venda': 'd-none',\n            'd_lote': 'd-none',\n            'd_variacao': 'd-none',\n            'd_resultado': 'd-none',\n            'funcao': undefined\n        };\n    }\n    \n    componentDidMount() {\n        const corretagem = localStorage.getItem('corretagem');\n        \n        if(corretagem !== null && corretagem !== '' && !isNaN(corretagem)){\n            this.setState({'corretagem': corretagem});\n        }\n\t}\n\t\n\thandleChangeCorretagem(e){\n        const corretagem = e.target.value;\n        this.setState({'corretagem': corretagem});\n        localStorage.setItem('corretagem', corretagem);\n    }\n\t\n\thandleChangeFuncao(e){\n        const funcao = e.target.value.toString();\n        \n        if(funcao === 'calcula_lote' || funcao === 'calcula_spread_lote' || funcao === 'calcula_sugestao'){\n            this.setState({'d_lote': ''});\n        }\n        \n        if(funcao === 'calcula_lote'){\n\t\t\tthis.setState({'d_variacao': ''});\n\t\t\tthis.setState({'d_compra': 'd-none'});\n        }\n        \n        if(funcao === 'calcula_sugestao' || funcao === 'calcula_lote'){\n\t\t\tthis.setState({'d_venda': 'd-none'});\n        }\n        \n        if(funcao !== 'calcula_lote'){\n            this.setState({'d_compra': ''});\n\t\t\tthis.setState({'d_variacao': 'd-none'});\n        }\n        \n        if(funcao !== 'calcula_lote' && funcao !== 'calcula_sugestao'){\n            this.setState({'d_venda': ''});\n        }\n        \n        if(funcao === 'calcula_spread'){\n            this.setState({'d_lote': 'd-none'});\n        }\n        \n        this.setState({'funcao': funcao});\n    }\n    \n    handleClickCalcular(e){\n        \n        if(this.state.funcao === 'calcula_lote'){\n            this.setState({'resultado': BagCalc.calcula_lote(this.state.lote, this.state.variacao, this.state.corretagem)});\n        }else if(this.state.funcao == 'calcula_spread'){\n            this.setState({'resultado': BagCalc.calcula_spread(this.state.compra, this.state.venda, this.state.corretagem)});\n        }else if(this.state.funcao == 'calcula_spread_lote'){\n            this.setState({'resultado': BagCalc.calcula_spread_lote(this.state.compra, this.state.venda, this.state.lote, this.state.corretagem)});\n        }else if(this.state.funcao == 'calcula_percentual_spread'){\n            this.setState({'resultado': BagCalc.calcula_percentual_spread(this.state.compra, this.state.venda, this.state.corretagem, this.state.lote)})\n        }else if(this.state.funcao == 'calcula_sugestao'){\n            this.setState({'resultado': BagCalc.calcula_sugestao(this.state.compra, this.state.lote, this.state.corretagem)});\n        }\n        \n        this.setState({'d_resultado': ''});\n        \n    }\n\t\n\trender() {\n        return(\n            <Container fluid>\n                <Row className=\"mt-3\">\n                    <Col size=\"6\">\n                        <Card>\n                            <CardBody>\n                                <CardTitle>BagCalc</CardTitle>\n                                <CardText>\n                                    <select className=\"browser-default custom-select\" id=\"select-funcao\" onChange={this.handleChangeFuncao.bind(this)}>\n                                        <option>Escolha a função</option>\n                                        <option value=\"calcula_lote\">calcular_lote</option>\n                                        <option value=\"calcula_spread\">calcula_spread</option>\n                                        <option value=\"calcula_spread_lote\">calcula_spread_lote</option>\n                                        <option value=\"calcula_percentual_spread\">calcula_percentual_spread</option>\n                                        <option value=\"calcula_sugestao\">calcula_sugestao</option>\n                                    </select>\n\t\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"0\" className=\"form-control mt-2\" value={this.state.corretagem} onChange={this.handleChangeCorretagem.bind(this)} placeholder=\"Corretagem\"/>\n                                    \n                                    <input type=\"number\" className={`form-control mt-2 ${this.state.d_variacao}`} placeholder=\"Variação\" onChange={e => this.setState({'variacao': e.target.value})}/>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" className={`form-control mt-2 ${this.state.d_compra}`} placeholder=\"Compra\" onChange={e => this.setState({'compra': e.target.value})}/>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" className={`form-control mt-2 ${this.state.d_venda}`} placeholder=\"Venda\" onChange={e => this.setState({'venda': e.target.value})}/>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" className={`form-control mt-2 ${this.state.d_lote}`} placeholder=\"Lote\" onChange={e => this.setState({'lote': e.target.value})}/>\n                                    \n                                </CardText>\n                                <Button color=\"success\" className=\"form-control m-0\" onClick={this.handleClickCalcular.bind(this)}>Calcular</Button>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <CardBody>\n                                <CardTitle>Resultados</CardTitle>\n                                <CardText className={this.state.d_resultado}>\n\t\t\t\t\t\t\t\t\t<ul>\n                                        <li><span>Função: {this.state.funcao}</span></li>\n                                        <li className={this.state.d_variacao}><span>Variação: {this.state.variacao}</span></li>\n                                        <li className={this.state.d_compra}><span>Compra: {this.state.compra}</span></li>\n                                        <li className={this.state.d_venda}><span>Venda: {this.state.venda}</span></li>\n                                        <li className={this.state.d_lote}><span>Lote: {this.state.lote}</span></li>\n\t\t\t\t\t\t\t\t\t</ul>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n// Componentes\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}